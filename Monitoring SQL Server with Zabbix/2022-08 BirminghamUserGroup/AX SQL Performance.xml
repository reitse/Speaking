<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export>
    <version>5.2</version>
    <date>2022-01-31T15:42:21Z</date>
    <groups>
        <group>
            <name>Templates/Databases</name>
        </group>
    </groups>
    <templates>
        <template>
            <template>Axians SQL Performance</template>
            <name>Axians SQL Performance</name>
            <description>Axians Template dedicated to specific database performance. Looking at Azure resources (memory, CPU load and number of CPU's) but also at Wait Statistics and disk latency.</description>
            <groups>
                <group>
                    <name>Templates/Databases</name>
                </group>
            </groups>
            <applications>
                <application>
                    <name>Axians Performance</name>
                </application>
                <application>
                    <name>Axians Performance RAW data</name>
                </application>
                <application>
                    <name>Wait Statistics</name>
                </application>
            </applications>
            <items>
                <item>
                    <name>GetWaitStats</name>
                    <type>ODBC</type>
                    <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    <delay>5m</delay>
                    <history>1d</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <params>SELECT
        wait_type, 
        wait_time_ms,
        waiting_tasks_count,
        signal_wait_time_ms
    FROM sys.dm_os_wait_stats
    WHERE  wait_type not in (N'BROKER_EVENTHANDLER' ,N'BROKER_RECEIVE_WAITFOR',N'BROKER_TASK_STOP',N'BROKER_TO_FLUSH',N'BROKER_TRANSMITTER',N'CHECKPOINT_QUEUE',N'CHKPT',N'CLR_AUTO_EVENT',N'CLR_MANUAL_EVENT',N'CLR_SEMAPHORE'
			,-- Maybe uncomment these four if you have mirroring issues
			N'DBMIRROR_DBM_EVENT',N'DBMIRROR_EVENTS_QUEUE',N'DBMIRROR_WORKER_QUEUE',N'DBMIRRORING_CMD',N'DIRTY_PAGE_POLL',N'DISPATCHER_QUEUE_SEMAPHORE',N'EXECSYNC',N'FSAGENT',N'FT_IFTS_SCHEDULER_IDLE_WAIT',N'FT_IFTSHC_MUTEX',
			-- Maybe uncomment these six if you have AG issues
			N'HADR_CLUSAPI_CALL',N'HADR_FILESTREAM_IOMGR_IOCOMPLETION',N'HADR_LOGCAPTURE_WAIT',N'HADR_NOTIFICATION_DEQUEUE'	,N'HADR_TIMER_TASK',N'HADR_WORK_QUEUE',N'KSOURCE_WAKEUP',N'LAZYWRITER_SLEEP',N'LOGMGR_QUEUE',N'MEMORY_ALLOCATION_EXT',N'ONDEMAND_TASK_QUEUE',N'PREEMPTIVE_XE_GETTARGETSTATE',N'PWAIT_ALL_COMPONENTS_INITIALIZED',N'PWAIT_DIRECTLOGCONSUMER_GETNEXT',N'QDS_PERSIST_TASK_MAIN_LOOP_SLEEP'
			,N'QDS_ASYNC_QUEUE',N'QDS_CLEANUP_STALE_QUERIES_TASK_MAIN_LOOP_SLEEP',N'QDS_SHUTDOWN_QUEUE',N'REDO_THREAD_PENDING_WORK',N'REQUEST_FOR_DEADLOCK_SEARCH',N'RESOURCE_QUEUE',N'SERVER_IDLE_CHECK',N'SLEEP_BPOOL_FLUSH',N'SLEEP_DBSTARTUP',N'SLEEP_DCOMSTARTUP',N'SLEEP_MASTERDBREADY',N'SLEEP_MASTERMDREADY',N'SLEEP_MASTERUPGRADED',N'SLEEP_MSDBSTARTUP',N'SLEEP_SYSTEMTASK',N'SLEEP_TASK',N'SLEEP_TEMPDBSTARTUP'
			,N'SNI_HTTP_ACCEPT',N'SP_SERVER_DIAGNOSTICS_SLEEP',N'SQLTRACE_BUFFER_FLUSH',N'SQLTRACE_INCREMENTAL_FLUSH_SLEEP',N'SQLTRACE_WAIT_ENTRIES',N'WAIT_FOR_RESULTS',N'WAITFOR',N'WAITFOR_TASKSHUTDOWN',N'WAIT_XTP_RECOVERY',N'WAIT_XTP_HOST_WAIT',N'WAIT_XTP_OFFLINE_CKPT_NEW_LOG',N'WAIT_XTP_CKPT_CLOSE',N'XE_DISPATCHER_JOIN',N'XE_DISPATCHER_WAIT',N'XE_TIMER_EVENT', 
			-- Azure or 2019 benign
			'SOS_WORK_DISPATCHER', 'PVS_PREALLOCATE','XE_LIVE_TARGET_TVF','RBIO_COMM_RETRY','HADR_FABRIC_CALLBACK','RBIO_FCB_DEFERRED_IO_FN', 'PWAIT_EXTENSIBILITY_CLEANUP_TASK'
			-- CXCONSUMER is regular, CXPACKET is the one to watch out for
			, 'CXCONSUMER')</params>
                    <username>{$MSSQL.USER}</username>
                    <password>{$MSSQL.PASSWORD}</password>
                    <applications>
                        <application>
                            <name>Axians Performance RAW data</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>cpu limit</name>
                    <type>ODBC</type>
                    <key>db.odbc.select[cpu_limit,&quot;{$MSSQL.DSN}&quot;]</key>
                    <delay>15s</delay>
                    <history>14d</history>
                    <value_type>FLOAT</value_type>
                    <params>select top 1 cpu_limit
from sys.dm_db_resource_stats
order by end_time desc</params>
                    <username>{$MSSQL.USER}</username>
                    <password>{$MSSQL.PASSWORD}</password>
                    <applications>
                        <application>
                            <name>Axians Performance</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>avg cpu percent</name>
                    <type>ODBC</type>
                    <key>db.odbc.select[get_avg_cpu,&quot;{$MSSQL.DSN}&quot;]</key>
                    <delay>15s</delay>
                    <history>14d</history>
                    <value_type>FLOAT</value_type>
                    <units>percent</units>
                    <params>select top 1 avg_cpu_percent 
from sys.dm_db_resource_stats
order by end_time desc</params>
                    <username>{$MSSQL.USER}</username>
                    <password>{$MSSQL.PASSWORD}</password>
                    <applications>
                        <application>
                            <name>Axians Performance</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>avg data io percent</name>
                    <type>ODBC</type>
                    <key>db.odbc.select[get_avg_data_io,&quot;{$MSSQL.DSN}&quot;]</key>
                    <delay>15s</delay>
                    <history>14d</history>
                    <value_type>FLOAT</value_type>
                    <units>percent</units>
                    <params>select top 1 avg_data_io_percent
from sys.dm_db_resource_stats
order by end_time desc</params>
                    <username>{$MSSQL.USER}</username>
                    <password>{$MSSQL.PASSWORD}</password>
                    <applications>
                        <application>
                            <name>Axians Performance</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>avg instance CPU Percent</name>
                    <type>ODBC</type>
                    <key>db.odbc.select[get_avg_instance_cpu,&quot;{$MSSQL.DSN}&quot;]</key>
                    <delay>15s</delay>
                    <history>14d</history>
                    <value_type>FLOAT</value_type>
                    <units>percent</units>
                    <params>select top 1 avg_instance_cpu_percent 
from sys.dm_db_resource_stats
order by end_time desc</params>
                    <username>{$MSSQL.USER}</username>
                    <password>{$MSSQL.PASSWORD}</password>
                    <applications>
                        <application>
                            <name>Axians Performance</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>avg instance memory percent</name>
                    <type>ODBC</type>
                    <key>db.odbc.select[get_avg_instance_memory,&quot;{$MSSQL.DSN}&quot;]</key>
                    <delay>15s</delay>
                    <history>14d</history>
                    <value_type>FLOAT</value_type>
                    <units>percent</units>
                    <params>select top 1 avg_instance_memory_percent
from sys.dm_db_resource_stats
order by end_time desc</params>
                    <username>{$MSSQL.USER}</username>
                    <password>{$MSSQL.PASSWORD}</password>
                    <applications>
                        <application>
                            <name>Axians Performance</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{nodata(120)}&lt;&gt;0</expression>
                            <name>NoData</name>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>avg log io percent</name>
                    <type>ODBC</type>
                    <key>db.odbc.select[get_avg_log_io,&quot;{$MSSQL.DSN}&quot;]</key>
                    <delay>15s</delay>
                    <history>14d</history>
                    <value_type>FLOAT</value_type>
                    <units>percent</units>
                    <params>select top 1 avg_log_write_percent
from sys.dm_db_resource_stats
order by end_time desc</params>
                    <username>{$MSSQL.USER}</username>
                    <password>{$MSSQL.PASSWORD}</password>
                    <applications>
                        <application>
                            <name>Axians Performance</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>avg memory usage percent</name>
                    <type>ODBC</type>
                    <key>db.odbc.select[get_avg_memory,&quot;{$MSSQL.DSN}&quot;]</key>
                    <delay>15s</delay>
                    <history>14d</history>
                    <value_type>FLOAT</value_type>
                    <units>percent</units>
                    <params>select top 1 avg_memory_usage_percent 
from sys.dm_db_resource_stats
order by end_time desc</params>
                    <username>{$MSSQL.USER}</username>
                    <password>{$MSSQL.PASSWORD}</password>
                    <applications>
                        <application>
                            <name>Axians Performance</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>Database Free Space</name>
                    <type>ODBC</type>
                    <key>db.odbc.select[get_db_free_space,&quot;{$MSSQL.DSN}&quot;]</key>
                    <delay>5m</delay>
                    <history>14d</history>
                    <value_type>FLOAT</value_type>
                    <params>SELECT 
	CAST((SUM(CAST(max_size as bigint)) * 8 / 1027.0) -  (SUM(CAST(size as bigint)) * 8 / 1027.0)as int)
FROM sys.database_files
WHERE type = 0 --ROWS</params>
                    <username>{$MSSQL.USER}</username>
                    <password>{$MSSQL.PASSWORD}</password>
                    <applications>
                        <application>
                            <name>Axians Performance</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{last(#3)}&lt;=1024</expression>
                            <name>DB Free space &lt; 1 GB</name>
                            <priority>DISASTER</priority>
                            <description>Database has less than 1GB free space available</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{last(#3)}&lt;=2048</expression>
                            <name>DB Free space &lt; 2 GB</name>
                            <priority>HIGH</priority>
                            <description>Database has less than 2GB free space available</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{last(#3)}&lt;=4096</expression>
                            <name>DB Free space &lt; 4 GB</name>
                            <priority>AVERAGE</priority>
                            <description>Database has less than 4GB free space available</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{last(#3)}&lt;=6144</expression>
                            <name>DB Free space &lt; 6 GB</name>
                            <priority>WARNING</priority>
                            <description>Database has less than 10 GB free space available</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                        <trigger>
                            <expression>{last(#3)}&lt;=10240</expression>
                            <name>DB Free space &lt; 10 GB</name>
                            <priority>INFO</priority>
                            <description>Database has less than 10 GB free space available</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>WaitStats: ACTIVATE_SF_CODEPACKAGE</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.ACTIVATE_SF_CODEPACKAGE</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='ACTIVATE_SF_CODEPACKAGE')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: ASYNC_IO_COMPLETION</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.ASYNC_IO_COMPLETION</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='ASYNC_IO_COMPLETION')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: ASYNC_NETWORK_IO</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.ASYNC_NETWORK_IO</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='ASYNC_NETWORK_IO')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: BACKUPBUFFER</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.BACKUPBUFFER</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='BACKUPBUFFER')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: BACKUPIO</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.BACKUPIO</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='BACKUPIO')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: BACKUPTHREAD</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.BACKUPTHREAD</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='BACKUPTHREAD')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: CMEMTHREAD</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.CMEMTHREAD</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='CMEMTHREAD')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: CONNECTION_ENDPOINT_LOCK</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.CONNECTION_ENDPOINT_LOCK</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='CONNECTION_ENDPOINT_LOCK')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: CXPACKET</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.CXPACKET</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='CXPACKET')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: CXSYNC_PORT</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.CXSYNC_PORT</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='CXSYNC_PORT')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: DAC_INIT</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.DAC_INIT</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='DAC_INIT')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: DIRTY_PAGE_SYNC</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.DIRTY_PAGE_SYNC</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='DIRTY_PAGE_SYNC')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: INST_CERT</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.INST_CERT</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='INST_CERT')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: IO_COMPLETION</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.IO_COMPLETION</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='IO_COMPLETION')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: LATCH_EX</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.LATCH_EX</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='LATCH_EX')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: LATCH_SH</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.LATCH_SH</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='LATCH_SH')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: LCK_M_I</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.LCK_M_I</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='LCK_M_I')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: LCK_M_IX</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.LCK_M_IX</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='LCK_M_IX')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: LCK_M_S</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.LCK_M_S</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='LCK_M_S')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: LCK_M_SCH_M</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.LCK_M_SCH_M</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='LCK_M_SCH_M')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: LCK_M_SCH_S</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.LCK_M_SCH_S</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='LCK_M_SCH_S')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: LCK_M_U</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.LCK_M_U</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='LCK_M_U')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: LCK_M_X</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.LCK_M_X</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='LCK_M_X')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: LOGBUFFER</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.LOGBUFFER</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='LOGBUFFER')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: LOGMGR_FLUSH</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.LOGMGR_FLUSH</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='LOGMGR_FLUSH')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: LOGPOOL_REPLACEMENTSET</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.LOGPOOL_REPLACEMENTSET</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='LOGPOOL_REPLACEMENTSET')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: LOG_RATE_GOVERNOR</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.LOG_RATE_GOVERNOR</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='LOG_RATE_GOVERNOR')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: MISCELLANEOUS</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.MISCELLANEOUS</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='MISCELLANEOUS')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: MSQL_XP</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.MSQL_XP</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='MSQL_XP')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: PAGEIOLATCH_EX</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.PAGEIOLATCH_EX</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='PAGEIOLATCH_EX')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: PAGEIOLATCH_SH</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.PAGEIOLATCH_SH</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='PAGEIOLATCH_SH')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: PAGEIOLATCH_UP</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.PAGEIOLATCH_UP</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='PAGEIOLATCH_UP')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: PAGELATCH_EX</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.PAGELATCH_EX</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='PAGELATCH_EX')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: PAGELATCH_SH</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.PAGELATCH_SH</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='PAGELATCH_SH')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: PAGELATCH_UP</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.PAGELATCH_UP</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='PAGELATCH_UP')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: PARALLEL_REDO_DRAIN_WORKER</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.PARALLEL_REDO_DRAIN_WORKER</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='PARALLEL_REDO_DRAIN_WORKER')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: PARALLEL_REDO_FLOW_CONTROL</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.PARALLEL_REDO_FLOW_CONTROL</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='PARALLEL_REDO_FLOW_CONTROL')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: PARALLEL_REDO_WORKER_WAIT_WORK</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.PARALLEL_REDO_WORKER_WAIT_WORK</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='PARALLEL_REDO_WORKER_WAIT_WORK')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: PREEMPTIVE_FILESIZEGET</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.PREEMPTIVE_FILESIZEGET</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='PREEMPTIVE_FILESIZEGET')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: PREEMPTIVE_HTTP_EVENT_WAIT</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.PREEMPTIVE_HTTP_EVENT_WAIT</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='PREEMPTIVE_HTTP_EVENT_WAIT')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: PREEMPTIVE_HTTP_REQUEST</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.PREEMPTIVE_HTTP_REQUEST</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='PREEMPTIVE_HTTP_REQUEST')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: PREEMPTIVE_ODBCOPS</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.PREEMPTIVE_ODBCOPS</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='PREEMPTIVE_ODBCOPS')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: PREEMPTIVE_OS_ACCEPTSECURITYCONTEXT</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.PREEMPTIVE_OS_ACCEPTSECURITYCONTEXT</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='PREEMPTIVE_OS_ACCEPTSECURITYCONTEXT')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: PREEMPTIVE_OS_ACQUIRECREDENTIALSHANDLE</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.PREEMPTIVE_OS_ACQUIRECREDENTIALSHANDLE</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='PREEMPTIVE_OS_ACQUIRECREDENTIALSHANDLE')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: PREEMPTIVE_OS_AUTHENTICATIONOPS</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.PREEMPTIVE_OS_AUTHENTICATIONOPS</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='PREEMPTIVE_OS_AUTHENTICATIONOPS')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: PREEMPTIVE_OS_AUTHORIZATIONOPS</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.PREEMPTIVE_OS_AUTHORIZATIONOPS</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='PREEMPTIVE_OS_AUTHORIZATIONOPS')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: PREEMPTIVE_OS_BCRYPTIMPORTKEY</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.PREEMPTIVE_OS_BCRYPTIMPORTKEY</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='PREEMPTIVE_OS_BCRYPTIMPORTKEY')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: PREEMPTIVE_OS_CLOSEHANDLE</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.PREEMPTIVE_OS_CLOSEHANDLE</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='PREEMPTIVE_OS_CLOSEHANDLE')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: PREEMPTIVE_OS_COMOPS</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.PREEMPTIVE_OS_COMOPS</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='PREEMPTIVE_OS_COMOPS')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: PREEMPTIVE_OS_CREATEDIRECTORY</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.PREEMPTIVE_OS_CREATEDIRECTORY</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='PREEMPTIVE_OS_CREATEDIRECTORY')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: PREEMPTIVE_OS_CREATEFILE</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.PREEMPTIVE_OS_CREATEFILE</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='PREEMPTIVE_OS_CREATEFILE')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: PREEMPTIVE_OS_CRYPTACQUIRECONTEXT</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.PREEMPTIVE_OS_CRYPTACQUIRECONTEXT</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='PREEMPTIVE_OS_CRYPTACQUIRECONTEXT')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: PREEMPTIVE_OS_CRYPTIMPORTKEY</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.PREEMPTIVE_OS_CRYPTIMPORTKEY</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='PREEMPTIVE_OS_CRYPTIMPORTKEY')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: PREEMPTIVE_OS_CRYPTOPS</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.PREEMPTIVE_OS_CRYPTOPS</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='PREEMPTIVE_OS_CRYPTOPS')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: PREEMPTIVE_OS_DELETESECURITYCONTEXT</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.PREEMPTIVE_OS_DELETESECURITYCONTEXT</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='PREEMPTIVE_OS_DELETESECURITYCONTEXT')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: PREEMPTIVE_OS_DEVICEIOCONTROL</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.PREEMPTIVE_OS_DEVICEIOCONTROL</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='PREEMPTIVE_OS_DEVICEIOCONTROL')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: PREEMPTIVE_OS_DISCONNECTNAMEDPIPE</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.PREEMPTIVE_OS_DISCONNECTNAMEDPIPE</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='PREEMPTIVE_OS_DISCONNECTNAMEDPIPE')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: PREEMPTIVE_OS_FILEOPS</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.PREEMPTIVE_OS_FILEOPS</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='PREEMPTIVE_OS_FILEOPS')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: PREEMPTIVE_OS_FINDFILE</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.PREEMPTIVE_OS_FINDFILE</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='PREEMPTIVE_OS_FINDFILE')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: PREEMPTIVE_OS_FLUSHFILEBUFFERS</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.PREEMPTIVE_OS_FLUSHFILEBUFFERS</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='PREEMPTIVE_OS_FLUSHFILEBUFFERS')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: PREEMPTIVE_OS_GETADDRINFO</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.PREEMPTIVE_OS_GETADDRINFO</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='PREEMPTIVE_OS_GETADDRINFO')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: PREEMPTIVE_OS_GETCOMPRESSEDFILESIZE</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.PREEMPTIVE_OS_GETCOMPRESSEDFILESIZE</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='PREEMPTIVE_OS_GETCOMPRESSEDFILESIZE')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: PREEMPTIVE_OS_GETFILEATTRIBUTES</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.PREEMPTIVE_OS_GETFILEATTRIBUTES</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='PREEMPTIVE_OS_GETFILEATTRIBUTES')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: PREEMPTIVE_OS_GETPROCADDRESS</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.PREEMPTIVE_OS_GETPROCADDRESS</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='PREEMPTIVE_OS_GETPROCADDRESS')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: PREEMPTIVE_OS_INITIALIZESECURITYCONTEXT</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.PREEMPTIVE_OS_INITIALIZESECURITYCONTEXT</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='PREEMPTIVE_OS_INITIALIZESECURITYCONTEXT')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: PREEMPTIVE_OS_LIBRARYOPS</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.PREEMPTIVE_OS_LIBRARYOPS</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='PREEMPTIVE_OS_LIBRARYOPS')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: PREEMPTIVE_OS_LOADLIBRARY</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.PREEMPTIVE_OS_LOADLIBRARY</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='PREEMPTIVE_OS_LOADLIBRARY')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: PREEMPTIVE_OS_LOOKUPACCOUNTSID</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.PREEMPTIVE_OS_LOOKUPACCOUNTSID</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='PREEMPTIVE_OS_LOOKUPACCOUNTSID')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: PREEMPTIVE_OS_NCRYPTIMPORTKEY</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.PREEMPTIVE_OS_NCRYPTIMPORTKEY</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='PREEMPTIVE_OS_NCRYPTIMPORTKEY')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: PREEMPTIVE_OS_QUERYREGISTRY</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.PREEMPTIVE_OS_QUERYREGISTRY</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='PREEMPTIVE_OS_QUERYREGISTRY')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: PREEMPTIVE_OS_VERIFYTRUST</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.PREEMPTIVE_OS_VERIFYTRUST</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='PREEMPTIVE_OS_VERIFYTRUST')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: PREEMPTIVE_OS_WRITEFILEGATHER</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.PREEMPTIVE_OS_WRITEFILEGATHER</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='PREEMPTIVE_OS_WRITEFILEGATHER')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: PREEMPTIVE_OS_WSASETLASTERROR</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.PREEMPTIVE_OS_WSASETLASTERROR</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='PREEMPTIVE_OS_WSASETLASTERROR')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: PREEMPTIVE_RG_RESPONSEFROMSERVER</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.PREEMPTIVE_RG_RESPONSEFROMSERVER</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='PREEMPTIVE_RG_RESPONSEFROMSERVER')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: PREEMPTIVE_XE_CALLBACKEXECUTE</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.PREEMPTIVE_XE_CALLBACKEXECUTE</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='PREEMPTIVE_XE_CALLBACKEXECUTE')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: PREEMPTIVE_XE_DISPATCHER</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.PREEMPTIVE_XE_DISPATCHER</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='PREEMPTIVE_XE_DISPATCHER')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: PREEMPTIVE_XE_SESSIONCOMMIT</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.PREEMPTIVE_XE_SESSIONCOMMIT</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='PREEMPTIVE_XE_SESSIONCOMMIT')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: PREEMPTIVE_XE_TARGETINIT</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.PREEMPTIVE_XE_TARGETINIT</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='PREEMPTIVE_XE_TARGETINIT')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: PREEMPTIVE_XHTTP</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.PREEMPTIVE_XHTTP</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='PREEMPTIVE_XHTTP')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: PWAIT_DEVOPS_AUDIT_WINFAB</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.PWAIT_DEVOPS_AUDIT_WINFAB</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='PWAIT_DEVOPS_AUDIT_WINFAB')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: PWAIT_PREEMPTIVE_OS_CRYPTOPENSTORAGEPROVIDER</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.PWAIT_PREEMPTIVE_OS_CRYPTOPENSTORAGEPROVIDER</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='PWAIT_PREEMPTIVE_OS_CRYPTOPENSTORAGEPROVIDER')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: PWAIT_SECURITY_FEDAUTH_AADLOOKUP</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.PWAIT_SECURITY_FEDAUTH_AADLOOKUP</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='PWAIT_SECURITY_FEDAUTH_AADLOOKUP')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: PWAIT_SECURITY_FEDAUTH_RPS</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.PWAIT_SECURITY_FEDAUTH_RPS</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='PWAIT_SECURITY_FEDAUTH_RPS')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: RBIO_AWAIT_RESPONSE</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.RBIO_AWAIT_RESPONSE</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='RBIO_AWAIT_RESPONSE')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: RESERVED_MEMORY_ALLOCATION_EXT</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.RESERVED_MEMORY_ALLOCATION_EXT</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='RESERVED_MEMORY_ALLOCATION_EXT')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: RESOURCE_GOVERNOR_IDLE</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.RESOURCE_GOVERNOR_IDLE</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='RESOURCE_GOVERNOR_IDLE')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: RESOURCE_SEMAPHORE</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.RESOURCE_SEMAPHORE</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='RESOURCE_SEMAPHORE')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: RESOURCE_SEMAPHORE_QUERY_COMPILE</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.RESOURCE_SEMAPHORE_QUERY_COMPILE</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='RESOURCE_SEMAPHORE_QUERY_COMPILE')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: Running ASYNC_IO_COMPLETION</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.ASYNC_IO_COMPLETION</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.ASYNC_IO_COMPLETION) - prev(waitstats.ASYNC_IO_COMPLETION))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running ASYNC_NETWORK_IO</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.ASYNC_NETWORK_IO</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.ASYNC_NETWORK_IO) - prev(waitstats.ASYNC_NETWORK_IO))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running BACKUPBUFFER</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.BACKUPBUFFER</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.BACKUPBUFFER) - prev(waitstats.BACKUPBUFFER))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running BACKUPIO</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.BACKUPIO</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.BACKUPIO) - prev(waitstats.BACKUPIO))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running BACKUPTHREAD</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.BACKUPTHREAD</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.BACKUPTHREAD) - prev(waitstats.BACKUPTHREAD))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running CMEMTHREAD</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.CMEMTHREAD</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.CMEMTHREAD) - prev(waitstats.CMEMTHREAD))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running CONNECTION_ENDPOINT_LOCK</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.CONNECTION_ENDPOINT_LOCK</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.CONNECTION_ENDPOINT_LOCK) - prev(waitstats.CONNECTION_ENDPOINT_LOCK))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running CXPACKET</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.CXPACKET</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.CXPACKET) - prev(waitstats.CXPACKET))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running CXSYNC_PORT</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.CXSYNC_PORT</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.CXSYNC_PORT) - prev(waitstats.CXSYNC_PORT))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running DAC_INIT</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.DAC_INIT</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.DAC_INIT) - prev(waitstats.DAC_INIT))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running DIRTY_PAGE_SYNC</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.DIRTY_PAGE_SYNC</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.DIRTY_PAGE_SYNC) - prev(waitstats.DIRTY_PAGE_SYNC))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running INST_CERT</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.INST_CERT</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.INST_CERT) - prev(waitstats.INST_CERT))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running IO_COMPLETION</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.IO_COMPLETION</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.IO_COMPLETION) - prev(waitstats.IO_COMPLETION))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running LATCH_EX</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.LATCH_EX</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.LATCH_EX) - prev(waitstats.LATCH_EX))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running LATCH_SH</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.LATCH_SH</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.LATCH_SH) - prev(waitstats.LATCH_SH))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running LCK_M_I</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.LCK_M_I</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.LCK_M_I) - prev(waitstats.LCK_M_I))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running LCK_M_IX</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.LCK_M_IX</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.LCK_M_IX) - prev(waitstats.LCK_M_IX))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running LCK_M_S</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.LCK_M_S</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.LCK_M_S) - prev(waitstats.LCK_M_S))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running LCK_M_SCH_M</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.LCK_M_SCH_M</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.LCK_M_SCH_M) - prev(waitstats.LCK_M_SCH_M))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running LCK_M_SCH_S</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.LCK_M_SCH_S</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.LCK_M_SCH_S) - prev(waitstats.LCK_M_SCH_S))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running LCK_M_U</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.LCK_M_U</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.LCK_M_U) - prev(waitstats.LCK_M_U))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running LCK_M_X</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.LCK_M_X</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.LCK_M_X) - prev(waitstats.LCK_M_X))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running LOGBUFFER</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.LOGBUFFER</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.LOGBUFFER) - prev(waitstats.LOGBUFFER))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running LOGMGR_FLUSH</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.LOGMGR_FLUSH</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.LOGMGR_FLUSH) - prev(waitstats.LOGMGR_FLUSH))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running LOGPOOL_REPLACEMENTSET</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.LOGPOOL_REPLACEMENTSET</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.LOGPOOL_REPLACEMENTSET) - prev(waitstats.LOGPOOL_REPLACEMENTSET))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running LOG_RATE_GOVERNOR</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.LOG_RATE_GOVERNOR</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.LOG_RATE_GOVERNOR) - prev(waitstats.LOG_RATE_GOVERNOR))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running MSQL_XP</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.MSQL_XP</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.MSQL_XP) - prev(waitstats.MSQL_XP))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running PAGEIOLATCH_EX</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.PAGEIOLATCH_EX</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.PAGEIOLATCH_EX) - prev(waitstats.PAGEIOLATCH_EX))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running PAGEIOLATCH_SH</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.PAGEIOLATCH_SH</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.PAGEIOLATCH_SH) - prev(waitstats.PAGEIOLATCH_SH))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running PAGEIOLATCH_UP</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.PAGEIOLATCH_UP</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.PAGEIOLATCH_UP) - prev(waitstats.PAGEIOLATCH_UP))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running PAGELATCH_EX</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.PAGELATCH_EX</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.PAGELATCH_EX) - prev(waitstats.PAGELATCH_EX))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running PAGELATCH_SH</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.PAGELATCH_SH</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.PAGELATCH_SH) - prev(waitstats.PAGELATCH_SH))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running PAGELATCH_UP</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.PAGELATCH_UP</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.PAGELATCH_UP) - prev(waitstats.PAGELATCH_UP))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running PARALLEL_REDO_DRAIN_WORKER</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.PARALLEL_REDO_DRAIN_WORKER</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.PARALLEL_REDO_DRAIN_WORKER) - prev(waitstats.PARALLEL_REDO_DRAIN_WORKER))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running PARALLEL_REDO_FLOW_CONTROL</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.PARALLEL_REDO_FLOW_CONTROL</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.PARALLEL_REDO_FLOW_CONTROL) - prev(waitstats.PARALLEL_REDO_FLOW_CONTROL))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running PARALLEL_REDO_WORKER_WAIT_WORK</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.PARALLEL_REDO_WORKER_WAIT_WORK</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.PARALLEL_REDO_WORKER_WAIT_WORK) - prev(waitstats.PARALLEL_REDO_WORKER_WAIT_WORK))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running PREEMPTIVE_FILESIZEGET</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.PREEMPTIVE_FILESIZEGET</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.PREEMPTIVE_FILESIZEGET) - prev(waitstats.PREEMPTIVE_FILESIZEGET))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running PREEMPTIVE_HTTP_EVENT_WAIT</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.PREEMPTIVE_HTTP_EVENT_WAIT</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.PREEMPTIVE_HTTP_EVENT_WAIT) - prev(waitstats.PREEMPTIVE_HTTP_EVENT_WAIT))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running PREEMPTIVE_HTTP_REQUEST</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.PREEMPTIVE_HTTP_REQUEST</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.PREEMPTIVE_HTTP_REQUEST) - prev(waitstats.PREEMPTIVE_HTTP_REQUEST))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running PREEMPTIVE_ODBCOPS</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.PREEMPTIVE_ODBCOPS</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.PREEMPTIVE_ODBCOPS) - prev(waitstats.PREEMPTIVE_ODBCOPS))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running PREEMPTIVE_OS_ACCEPTSECURITYCONTEXT</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.PREEMPTIVE_OS_ACCEPTSECURITYCONTEXT</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.PREEMPTIVE_OS_ACCEPTSECURITYCONTEXT) - prev(waitstats.PREEMPTIVE_OS_ACCEPTSECURITYCONTEXT))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running PREEMPTIVE_OS_ACQUIRECREDENTIALSHANDLE</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.PREEMPTIVE_OS_ACQUIRECREDENTIALSHANDLE</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.PREEMPTIVE_OS_ACQUIRECREDENTIALSHANDLE) - prev(waitstats.PREEMPTIVE_OS_ACQUIRECREDENTIALSHANDLE))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running PREEMPTIVE_OS_AUTHENTICATIONOPS</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.PREEMPTIVE_OS_AUTHENTICATIONOPS</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.PREEMPTIVE_OS_AUTHENTICATIONOPS) - prev(waitstats.PREEMPTIVE_OS_AUTHENTICATIONOPS))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running PREEMPTIVE_OS_AUTHORIZATIONOPS</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.PREEMPTIVE_OS_AUTHORIZATIONOPS</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.PREEMPTIVE_OS_AUTHORIZATIONOPS) - prev(waitstats.PREEMPTIVE_OS_AUTHORIZATIONOPS))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running PREEMPTIVE_OS_BCRYPTIMPORTKEY</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.PREEMPTIVE_OS_BCRYPTIMPORTKEY</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.PREEMPTIVE_OS_BCRYPTIMPORTKEY) - prev(waitstats.PREEMPTIVE_OS_BCRYPTIMPORTKEY))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running PREEMPTIVE_OS_CLOSEHANDLE</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.PREEMPTIVE_OS_CLOSEHANDLE</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.PREEMPTIVE_OS_CLOSEHANDLE) - prev(waitstats.PREEMPTIVE_OS_CLOSEHANDLE))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running PREEMPTIVE_OS_COMOPS</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.PREEMPTIVE_OS_COMOPS</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.PREEMPTIVE_OS_COMOPS) - prev(waitstats.PREEMPTIVE_OS_COMOPS))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running PREEMPTIVE_OS_CREATEDIRECTORY</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.PREEMPTIVE_OS_CREATEDIRECTORY</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.PREEMPTIVE_OS_CREATEDIRECTORY) - prev(waitstats.PREEMPTIVE_OS_CREATEDIRECTORY))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running PREEMPTIVE_OS_CREATEFILE</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.PREEMPTIVE_OS_CREATEFILE</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.PREEMPTIVE_OS_CREATEFILE) - prev(waitstats.PREEMPTIVE_OS_CREATEFILE))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running PREEMPTIVE_OS_CRYPTACQUIRECONTEXT</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.PREEMPTIVE_OS_CRYPTACQUIRECONTEXT</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.PREEMPTIVE_OS_CRYPTACQUIRECONTEXT) - prev(waitstats.PREEMPTIVE_OS_CRYPTACQUIRECONTEXT))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running PREEMPTIVE_OS_CRYPTIMPORTKEY</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.PREEMPTIVE_OS_CRYPTIMPORTKEY</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.PREEMPTIVE_OS_CRYPTIMPORTKEY) - prev(waitstats.PREEMPTIVE_OS_CRYPTIMPORTKEY))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running PREEMPTIVE_OS_CRYPTOPS</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.PREEMPTIVE_OS_CRYPTOPS</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.PREEMPTIVE_OS_CRYPTOPS) - prev(waitstats.PREEMPTIVE_OS_CRYPTOPS))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running PREEMPTIVE_OS_DELETESECURITYCONTEXT</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.PREEMPTIVE_OS_DELETESECURITYCONTEXT</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.PREEMPTIVE_OS_DELETESECURITYCONTEXT) - prev(waitstats.PREEMPTIVE_OS_DELETESECURITYCONTEXT))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running PREEMPTIVE_OS_DEVICEIOCONTROL</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.PREEMPTIVE_OS_DEVICEIOCONTROL</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.PREEMPTIVE_OS_DEVICEIOCONTROL) - prev(waitstats.PREEMPTIVE_OS_DEVICEIOCONTROL))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running PREEMPTIVE_OS_DISCONNECTNAMEDPIPE</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.PREEMPTIVE_OS_DISCONNECTNAMEDPIPE</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.PREEMPTIVE_OS_DISCONNECTNAMEDPIPE) - prev(waitstats.PREEMPTIVE_OS_DISCONNECTNAMEDPIPE))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running PREEMPTIVE_OS_FILEOPS</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.PREEMPTIVE_OS_FILEOPS</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.PREEMPTIVE_OS_FILEOPS) - prev(waitstats.PREEMPTIVE_OS_FILEOPS))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running PREEMPTIVE_OS_FINDFILE</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.PREEMPTIVE_OS_FINDFILE</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.PREEMPTIVE_OS_FINDFILE) - prev(waitstats.PREEMPTIVE_OS_FINDFILE))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running PREEMPTIVE_OS_FLUSHFILEBUFFERS</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.PREEMPTIVE_OS_FLUSHFILEBUFFERS</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.PREEMPTIVE_OS_FLUSHFILEBUFFERS) - prev(waitstats.PREEMPTIVE_OS_FLUSHFILEBUFFERS))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running PREEMPTIVE_OS_GETADDRINFO</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.PREEMPTIVE_OS_GETADDRINFO</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.PREEMPTIVE_OS_GETADDRINFO) - prev(waitstats.PREEMPTIVE_OS_GETADDRINFO))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running PREEMPTIVE_OS_GETCOMPRESSEDFILESIZE</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.PREEMPTIVE_OS_GETCOMPRESSEDFILESIZE</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.PREEMPTIVE_OS_GETCOMPRESSEDFILESIZE) - prev(waitstats.PREEMPTIVE_OS_GETCOMPRESSEDFILESIZE))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running PREEMPTIVE_OS_GETFILEATTRIBUTES</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.PREEMPTIVE_OS_GETFILEATTRIBUTES</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.PREEMPTIVE_OS_GETFILEATTRIBUTES) - prev(waitstats.PREEMPTIVE_OS_GETFILEATTRIBUTES))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running PREEMPTIVE_OS_GETPROCADDRESS</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.PREEMPTIVE_OS_GETPROCADDRESS</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.PREEMPTIVE_OS_GETPROCADDRESS) - prev(waitstats.PREEMPTIVE_OS_GETPROCADDRESS))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running PREEMPTIVE_OS_INITIALIZESECURITYCONTEXT</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.PREEMPTIVE_OS_INITIALIZESECURITYCONTEXT</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.PREEMPTIVE_OS_INITIALIZESECURITYCONTEXT) - prev(waitstats.PREEMPTIVE_OS_INITIALIZESECURITYCONTEXT))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running PREEMPTIVE_OS_LIBRARYOPS</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.PREEMPTIVE_OS_LIBRARYOPS</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.PREEMPTIVE_OS_LIBRARYOPS) - prev(waitstats.PREEMPTIVE_OS_LIBRARYOPS))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running PREEMPTIVE_OS_LOADLIBRARY</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.PREEMPTIVE_OS_LOADLIBRARY</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.PREEMPTIVE_OS_LOADLIBRARY) - prev(waitstats.PREEMPTIVE_OS_LOADLIBRARY))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running PREEMPTIVE_OS_LOOKUPACCOUNTSID</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.PREEMPTIVE_OS_LOOKUPACCOUNTSID</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.PREEMPTIVE_OS_LOOKUPACCOUNTSID) - prev(waitstats.PREEMPTIVE_OS_LOOKUPACCOUNTSID))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running PREEMPTIVE_OS_NCRYPTIMPORTKEY</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.PREEMPTIVE_OS_NCRYPTIMPORTKEY</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.PREEMPTIVE_OS_NCRYPTIMPORTKEY) - prev(waitstats.PREEMPTIVE_OS_NCRYPTIMPORTKEY))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running PREEMPTIVE_OS_QUERYREGISTRY</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.PREEMPTIVE_OS_QUERYREGISTRY</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.PREEMPTIVE_OS_QUERYREGISTRY) - prev(waitstats.PREEMPTIVE_OS_QUERYREGISTRY))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running PREEMPTIVE_OS_VERIFYTRUST</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.PREEMPTIVE_OS_VERIFYTRUST</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.PREEMPTIVE_OS_VERIFYTRUST) - prev(waitstats.PREEMPTIVE_OS_VERIFYTRUST))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running PREEMPTIVE_OS_WRITEFILEGATHER</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.PREEMPTIVE_OS_WRITEFILEGATHER</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.PREEMPTIVE_OS_WRITEFILEGATHER) - prev(waitstats.PREEMPTIVE_OS_WRITEFILEGATHER))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running PREEMPTIVE_OS_WSASETLASTERROR</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.PREEMPTIVE_OS_WSASETLASTERROR</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.PREEMPTIVE_OS_WSASETLASTERROR) - prev(waitstats.PREEMPTIVE_OS_WSASETLASTERROR))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running PREEMPTIVE_RG_RESPONSEFROMSERVER</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.PREEMPTIVE_RG_RESPONSEFROMSERVER</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.PREEMPTIVE_RG_RESPONSEFROMSERVER) - prev(waitstats.PREEMPTIVE_RG_RESPONSEFROMSERVER))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running PREEMPTIVE_XE_CALLBACKEXECUTE</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.PREEMPTIVE_XE_CALLBACKEXECUTE</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.PREEMPTIVE_XE_CALLBACKEXECUTE) - prev(waitstats.PREEMPTIVE_XE_CALLBACKEXECUTE))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running PREEMPTIVE_XE_DISPATCHER</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.PREEMPTIVE_XE_DISPATCHER</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.PREEMPTIVE_XE_DISPATCHER) - prev(waitstats.PREEMPTIVE_XE_DISPATCHER))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running PREEMPTIVE_XE_SESSIONCOMMIT</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.PREEMPTIVE_XE_SESSIONCOMMIT</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.PREEMPTIVE_XE_SESSIONCOMMIT) - prev(waitstats.PREEMPTIVE_XE_SESSIONCOMMIT))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running PREEMPTIVE_XE_TARGETINIT</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.PREEMPTIVE_XE_TARGETINIT</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.PREEMPTIVE_XE_TARGETINIT) - prev(waitstats.PREEMPTIVE_XE_TARGETINIT))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running PREEMPTIVE_XHTTP</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.PREEMPTIVE_XHTTP</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.PREEMPTIVE_XHTTP) - prev(waitstats.PREEMPTIVE_XHTTP))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running PWAIT_DEVOPS_AUDIT_WINFAB</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.PWAIT_DEVOPS_AUDIT_WINFAB</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.PWAIT_DEVOPS_AUDIT_WINFAB) - prev(waitstats.PWAIT_DEVOPS_AUDIT_WINFAB))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running PWAIT_PREEMPTIVE_OS_CRYPTOPENSTORAGEPROVIDER</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.PWAIT_PREEMPTIVE_OS_CRYPTOPENSTORAGEPROVIDER</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.PWAIT_PREEMPTIVE_OS_CRYPTOPENSTORAGEPROVIDER) - prev(waitstats.PWAIT_PREEMPTIVE_OS_CRYPTOPENSTORAGEPROVIDER))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running PWAIT_SECURITY_FEDAUTH_AADLOOKUP</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.PWAIT_SECURITY_FEDAUTH_AADLOOKUP</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.PWAIT_SECURITY_FEDAUTH_AADLOOKUP) - prev(waitstats.PWAIT_SECURITY_FEDAUTH_AADLOOKUP))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running PWAIT_SECURITY_FEDAUTH_RPS</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.PWAIT_SECURITY_FEDAUTH_RPS</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.PWAIT_SECURITY_FEDAUTH_RPS) - prev(waitstats.PWAIT_SECURITY_FEDAUTH_RPS))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running RBIO_AWAIT_RESPONSE</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.RBIO_AWAIT_RESPONSE</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.RBIO_AWAIT_RESPONSE) - prev(waitstats.RBIO_AWAIT_RESPONSE))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running RESERVED_MEMORY_ALLOCATION_EXT</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.RESERVED_MEMORY_ALLOCATION_EXT</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.RESERVED_MEMORY_ALLOCATION_EXT) - prev(waitstats.RESERVED_MEMORY_ALLOCATION_EXT))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running RESOURCE_GOVERNOR_IDLE</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.RESOURCE_GOVERNOR_IDLE</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.RESOURCE_GOVERNOR_IDLE) - prev(waitstats.RESOURCE_GOVERNOR_IDLE))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running RESOURCE_SEMAPHORE</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.RESOURCE_SEMAPHORE</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.RESOURCE_SEMAPHORE) - prev(waitstats.RESOURCE_SEMAPHORE))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running RESOURCE_SEMAPHORE_QUERY_COMPILE</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.RESOURCE_SEMAPHORE_QUERY_COMPILE</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.RESOURCE_SEMAPHORE_QUERY_COMPILE) - prev(waitstats.RESOURCE_SEMAPHORE_QUERY_COMPILE))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running SESSION_WAIT_STATS_CHILDREN</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.SESSION_WAIT_STATS_CHILDREN</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.SESSION_WAIT_STATS_CHILDREN) - prev(waitstats.SESSION_WAIT_STATS_CHILDREN))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running SNI_CONN_DUP</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.SNI_CONN_DUP</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.SNI_CONN_DUP) - prev(waitstats.SNI_CONN_DUP))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running SOS_DISPATCHER_MUTEX</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.SOS_DISPATCHER_MUTEX</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.SOS_DISPATCHER_MUTEX) - prev(waitstats.SOS_DISPATCHER_MUTEX))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running SOS_SCHEDULER_YIELD</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.SOS_SCHEDULER_YIELD</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.SOS_SCHEDULER_YIELD) - prev(waitstats.SOS_SCHEDULER_YIELD))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running SOS_SYNC_TASK_ENQUEUE_EVENT</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.SOS_SYNC_TASK_ENQUEUE_EVENT</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.SOS_SYNC_TASK_ENQUEUE_EVENT) - prev(waitstats.SOS_SYNC_TASK_ENQUEUE_EVENT))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running SOS_WORKER_MIGRATION</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.SOS_WORKER_MIGRATION</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.SOS_WORKER_MIGRATION) - prev(waitstats.SOS_WORKER_MIGRATION))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running STARTUP_DEPENDENCY_MANAGER</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.STARTUP_DEPENDENCY_MANAGER</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.STARTUP_DEPENDENCY_MANAGER) - prev(waitstats.STARTUP_DEPENDENCY_MANAGER))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running THREADPOOL</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.THREADPOOL</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.THREADPOOL) - prev(waitstats.THREADPOOL))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running WAIT_ON_SYNC_STATISTICS_REFRESH</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.WAIT_ON_SYNC_STATISTICS_REFRESH</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.WAIT_ON_SYNC_STATISTICS_REFRESH) - prev(waitstats.WAIT_ON_SYNC_STATISTICS_REFRESH))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running WRITELOG</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.WRITELOG</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.WRITELOG) - prev(waitstats.WRITELOG))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running WRITE_COMPLETION</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running.WRITE_COMPLETION</key>
                    <delay>5m</delay>
                    <history>7d</history>
                    <units>ms</units>
                    <params>(last(waitstats.WRITE_COMPLETION) - prev(waitstats.WRITE_COMPLETION))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: Running ACTIVATE_SF_CODEPACKAGE</name>
                    <type>CALCULATED</type>
                    <key>waitstats.running_ACTIVATE_SF_CODEPACKAGE</key>
                    <delay>5m</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <params>(last(waitstats.ACTIVATE_SF_CODEPACKAGE) - prev(waitstats.ACTIVATE_SF_CODEPACKAGE))</params>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>WaitStats: SESSION_WAIT_STATS_CHILDREN</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.SESSION_WAIT_STATS_CHILDREN</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='SESSION_WAIT_STATS_CHILDREN')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: SNI_CONN_DUP</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.SNI_CONN_DUP</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='SNI_CONN_DUP')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: SOS_DISPATCHER_MUTEX</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.SOS_DISPATCHER_MUTEX</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='SOS_DISPATCHER_MUTEX')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: SOS_SCHEDULER_YIELD</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.SOS_SCHEDULER_YIELD</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='SOS_SCHEDULER_YIELD')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: SOS_SYNC_TASK_ENQUEUE_EVENT</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.SOS_SYNC_TASK_ENQUEUE_EVENT</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='SOS_SYNC_TASK_ENQUEUE_EVENT')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: SOS_WORKER_MIGRATION</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.SOS_WORKER_MIGRATION</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='SOS_WORKER_MIGRATION')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: STARTUP_DEPENDENCY_MANAGER</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.STARTUP_DEPENDENCY_MANAGER</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='STARTUP_DEPENDENCY_MANAGER')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: THREADPOOL</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.THREADPOOL</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='THREADPOOL')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: WAIT_ON_SYNC_STATISTICS_REFRESH</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.WAIT_ON_SYNC_STATISTICS_REFRESH</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='WAIT_ON_SYNC_STATISTICS_REFRESH')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: WRITELOG</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.WRITELOG</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='WRITELOG')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
                <item>
                    <name>WaitStats: WRITE_COMPLETION</name>
                    <type>DEPENDENT</type>
                    <key>waitstats.WRITE_COMPLETION</key>
                    <delay>0</delay>
                    <history>1d</history>
                    <units>ms</units>
                    <applications>
                        <application>
                            <name>Wait Statistics</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$[?(@.wait_type=='WRITE_COMPLETION')].wait_time_ms.first()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>db.odbc.get[get_wait_stats,&quot;{$MSSQL.DSN}&quot;]</key>
                    </master_item>
                </item>
            </items>
            <macros>
                <macro>
                    <macro>{$MSSQL.DSN}</macro>
                    <value>&lt;Put your DSN here&gt;</value>
                    <description>System data source name.</description>
                </macro>
                <macro>
                    <macro>{$MSSQL.PASSWORD}</macro>
                    <value>&lt;Put your password here&gt;</value>
                    <description>MSSQL user password.</description>
                </macro>
                <macro>
                    <macro>{$MSSQL.PORT}</macro>
                    <value>1433</value>
                    <description>MSSQL TCP port.</description>
                </macro>
                <macro>
                    <macro>{$MSSQL.USER}</macro>
                    <value>&lt;Put your username here&gt;</value>
                    <description>MSSQL username.</description>
                </macro>
            </macros>
            <dashboards>
                <dashboard>
                    <name>Axians CPU Performance</name>
                    <widgets>
                        <widget>
                            <type>GRAPH_CLASSIC</type>
                            <width>8</width>
                            <height>5</height>
                            <fields>
                                <field>
                                    <type>GRAPH</type>
                                    <name>graphid</name>
                                    <value>
                                        <name>cpu cores</name>
                                        <host>Axians SQL Performance</host>
                                    </value>
                                </field>
                            </fields>
                        </widget>
                        <widget>
                            <type>GRAPH_CLASSIC</type>
                            <x>8</x>
                            <width>12</width>
                            <height>5</height>
                            <fields>
                                <field>
                                    <type>GRAPH</type>
                                    <name>graphid</name>
                                    <value>
                                        <name>cpu load</name>
                                        <host>Axians SQL Performance</host>
                                    </value>
                                </field>
                            </fields>
                        </widget>
                        <widget>
                            <type>GRAPH_CLASSIC</type>
                            <y>5</y>
                            <width>20</width>
                            <height>5</height>
                            <fields>
                                <field>
                                    <type>GRAPH</type>
                                    <name>graphid</name>
                                    <value>
                                        <name>CPU Waits</name>
                                        <host>Axians SQL Performance</host>
                                    </value>
                                </field>
                            </fields>
                        </widget>
                    </widgets>
                </dashboard>
                <dashboard>
                    <name>Axians IO Performance</name>
                    <widgets>
                        <widget>
                            <type>GRAPH_CLASSIC</type>
                            <width>15</width>
                            <height>5</height>
                            <fields>
                                <field>
                                    <type>GRAPH</type>
                                    <name>graphid</name>
                                    <value>
                                        <name>io load</name>
                                        <host>Axians SQL Performance</host>
                                    </value>
                                </field>
                            </fields>
                        </widget>
                        <widget>
                            <type>GRAPH_CLASSIC</type>
                            <y>5</y>
                            <width>15</width>
                            <height>5</height>
                            <fields>
                                <field>
                                    <type>GRAPH</type>
                                    <name>graphid</name>
                                    <value>
                                        <name>IO Waits</name>
                                        <host>Axians SQL Performance</host>
                                    </value>
                                </field>
                            </fields>
                        </widget>
                        <widget>
                            <type>GRAPH_CLASSIC</type>
                            <x>15</x>
                            <width>9</width>
                            <height>5</height>
                            <fields>
                                <field>
                                    <type>GRAPH</type>
                                    <name>graphid</name>
                                    <value>
                                        <name>Disk Free Space</name>
                                        <host>Axians SQL Performance</host>
                                    </value>
                                </field>
                            </fields>
                        </widget>
                    </widgets>
                </dashboard>
                <dashboard>
                    <name>Axians Locks and Latches</name>
                    <widgets>
                        <widget>
                            <type>GRAPH_CLASSIC</type>
                            <width>21</width>
                            <height>5</height>
                            <fields>
                                <field>
                                    <type>GRAPH</type>
                                    <name>graphid</name>
                                    <value>
                                        <name>Lock waits</name>
                                        <host>Axians SQL Performance</host>
                                    </value>
                                </field>
                            </fields>
                        </widget>
                        <widget>
                            <type>GRAPH_CLASSIC</type>
                            <y>5</y>
                            <width>21</width>
                            <height>5</height>
                            <fields>
                                <field>
                                    <type>GRAPH</type>
                                    <name>graphid</name>
                                    <value>
                                        <name>Latch waits</name>
                                        <host>Axians SQL Performance</host>
                                    </value>
                                </field>
                            </fields>
                        </widget>
                    </widgets>
                </dashboard>
                <dashboard>
                    <name>Axians Memory Performance</name>
                    <widgets>
                        <widget>
                            <type>GRAPH_CLASSIC</type>
                            <width>18</width>
                            <height>5</height>
                            <fields>
                                <field>
                                    <type>GRAPH</type>
                                    <name>graphid</name>
                                    <value>
                                        <name>memory usage</name>
                                        <host>Axians SQL Performance</host>
                                    </value>
                                </field>
                            </fields>
                        </widget>
                        <widget>
                            <type>GRAPH_CLASSIC</type>
                            <y>5</y>
                            <width>18</width>
                            <height>5</height>
                            <fields>
                                <field>
                                    <type>GRAPH</type>
                                    <name>graphid</name>
                                    <value>
                                        <name>Latch waits</name>
                                        <host>Axians SQL Performance</host>
                                    </value>
                                </field>
                            </fields>
                        </widget>
                    </widgets>
                </dashboard>
                <dashboard>
                    <name>Axians sql performance dashboard</name>
                    <widgets>
                        <widget>
                            <type>GRAPH_CLASSIC</type>
                            <width>12</width>
                            <height>4</height>
                            <fields>
                                <field>
                                    <type>GRAPH</type>
                                    <name>graphid</name>
                                    <value>
                                        <name>cpu cores</name>
                                        <host>Axians SQL Performance</host>
                                    </value>
                                </field>
                            </fields>
                        </widget>
                        <widget>
                            <type>GRAPH_CLASSIC</type>
                            <x>12</x>
                            <width>12</width>
                            <height>4</height>
                            <fields>
                                <field>
                                    <type>GRAPH</type>
                                    <name>graphid</name>
                                    <value>
                                        <name>cpu load</name>
                                        <host>Axians SQL Performance</host>
                                    </value>
                                </field>
                            </fields>
                        </widget>
                        <widget>
                            <type>GRAPH_CLASSIC</type>
                            <y>4</y>
                            <width>12</width>
                            <height>5</height>
                            <fields>
                                <field>
                                    <type>GRAPH</type>
                                    <name>graphid</name>
                                    <value>
                                        <name>io load</name>
                                        <host>Axians SQL Performance</host>
                                    </value>
                                </field>
                            </fields>
                        </widget>
                        <widget>
                            <type>GRAPH_CLASSIC</type>
                            <x>12</x>
                            <y>4</y>
                            <width>12</width>
                            <height>5</height>
                            <fields>
                                <field>
                                    <type>GRAPH</type>
                                    <name>graphid</name>
                                    <value>
                                        <name>memory usage</name>
                                        <host>Axians SQL Performance</host>
                                    </value>
                                </field>
                            </fields>
                        </widget>
                        <widget>
                            <type>GRAPH_CLASSIC</type>
                            <y>9</y>
                            <width>24</width>
                            <height>5</height>
                            <fields>
                                <field>
                                    <type>GRAPH</type>
                                    <name>graphid</name>
                                    <value>
                                        <name>Poison Waits</name>
                                        <host>Axians SQL Performance</host>
                                    </value>
                                </field>
                            </fields>
                        </widget>
                    </widgets>
                </dashboard>
            </dashboards>
        </template>
    </templates>
    <graphs>
        <graph>
            <name>Backup waits</name>
            <show_triggers>NO</show_triggers>
            <graph_items>
                <graph_item>
                    <sortorder>1</sortorder>
                    <color>199C0D</color>
                    <item>
                        <host>Axians SQL Performance</host>
                        <key>waitstats.running.BACKUPBUFFER</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>2</sortorder>
                    <color>F63100</color>
                    <item>
                        <host>Axians SQL Performance</host>
                        <key>waitstats.running.BACKUPIO</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>3</sortorder>
                    <color>2774A4</color>
                    <item>
                        <host>Axians SQL Performance</host>
                        <key>waitstats.running.BACKUPTHREAD</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>cpu cores</name>
            <show_triggers>NO</show_triggers>
            <graph_items>
                <graph_item>
                    <sortorder>1</sortorder>
                    <drawtype>FILLED_REGION</drawtype>
                    <color>199C0D</color>
                    <item>
                        <host>Axians SQL Performance</host>
                        <key>db.odbc.select[cpu_limit,&quot;{$MSSQL.DSN}&quot;]</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>cpu load</name>
            <show_triggers>NO</show_triggers>
            <graph_items>
                <graph_item>
                    <sortorder>1</sortorder>
                    <color>199C0D</color>
                    <item>
                        <host>Axians SQL Performance</host>
                        <key>db.odbc.select[get_avg_cpu,&quot;{$MSSQL.DSN}&quot;]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>2</sortorder>
                    <color>F63100</color>
                    <item>
                        <host>Axians SQL Performance</host>
                        <key>db.odbc.select[get_avg_instance_cpu,&quot;{$MSSQL.DSN}&quot;]</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>CPU Waits</name>
            <show_triggers>NO</show_triggers>
            <graph_items>
                <graph_item>
                    <sortorder>1</sortorder>
                    <color>AB47BC</color>
                    <item>
                        <host>Axians SQL Performance</host>
                        <key>waitstats.running.CXPACKET</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>2</sortorder>
                    <color>FFFF00</color>
                    <item>
                        <host>Axians SQL Performance</host>
                        <key>waitstats.running.SOS_SCHEDULER_YIELD</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>3</sortorder>
                    <color>FF0000</color>
                    <item>
                        <host>Axians SQL Performance</host>
                        <key>waitstats.running.THREADPOOL</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>4</sortorder>
                    <color>F7941D</color>
                    <item>
                        <host>Axians SQL Performance</host>
                        <key>waitstats.running.CXSYNC_PORT</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>Disk Free Space</name>
            <graph_items>
                <graph_item>
                    <sortorder>1</sortorder>
                    <color>199C0D</color>
                    <item>
                        <host>Axians SQL Performance</host>
                        <key>db.odbc.select[get_db_free_space,&quot;{$MSSQL.DSN}&quot;]</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>io load</name>
            <show_triggers>NO</show_triggers>
            <graph_items>
                <graph_item>
                    <sortorder>1</sortorder>
                    <color>199C0D</color>
                    <item>
                        <host>Axians SQL Performance</host>
                        <key>db.odbc.select[get_avg_data_io,&quot;{$MSSQL.DSN}&quot;]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>2</sortorder>
                    <color>F63100</color>
                    <item>
                        <host>Axians SQL Performance</host>
                        <key>db.odbc.select[get_avg_log_io,&quot;{$MSSQL.DSN}&quot;]</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>IO Waits</name>
            <show_triggers>NO</show_triggers>
            <graph_items>
                <graph_item>
                    <sortorder>1</sortorder>
                    <color>199C0D</color>
                    <item>
                        <host>Axians SQL Performance</host>
                        <key>waitstats.running.ASYNC_IO_COMPLETION</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>2</sortorder>
                    <color>F63100</color>
                    <item>
                        <host>Axians SQL Performance</host>
                        <key>waitstats.running.ASYNC_NETWORK_IO</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>3</sortorder>
                    <color>2774A4</color>
                    <item>
                        <host>Axians SQL Performance</host>
                        <key>waitstats.running.CMEMTHREAD</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>4</sortorder>
                    <color>F7941D</color>
                    <item>
                        <host>Axians SQL Performance</host>
                        <key>waitstats.running.IO_COMPLETION</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>5</sortorder>
                    <color>FC6EA3</color>
                    <item>
                        <host>Axians SQL Performance</host>
                        <key>waitstats.running.LOGBUFFER</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>6</sortorder>
                    <color>6C59DC</color>
                    <item>
                        <host>Axians SQL Performance</host>
                        <key>waitstats.running.RESOURCE_SEMAPHORE</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>7</sortorder>
                    <color>C7A72D</color>
                    <item>
                        <host>Axians SQL Performance</host>
                        <key>waitstats.running.RESOURCE_SEMAPHORE_QUERY_COMPILE</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>8</sortorder>
                    <color>BA2A5D</color>
                    <item>
                        <host>Axians SQL Performance</host>
                        <key>waitstats.running.WRITELOG</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>9</sortorder>
                    <color>F230E0</color>
                    <item>
                        <host>Axians SQL Performance</host>
                        <key>waitstats.running.WRITE_COMPLETION</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>Latch waits</name>
            <show_triggers>NO</show_triggers>
            <graph_items>
                <graph_item>
                    <sortorder>1</sortorder>
                    <color>199C0D</color>
                    <item>
                        <host>Axians SQL Performance</host>
                        <key>waitstats.running.LATCH_EX</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>2</sortorder>
                    <color>F63100</color>
                    <item>
                        <host>Axians SQL Performance</host>
                        <key>waitstats.running.LATCH_SH</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>3</sortorder>
                    <color>2774A4</color>
                    <item>
                        <host>Axians SQL Performance</host>
                        <key>waitstats.running.PAGEIOLATCH_EX</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>4</sortorder>
                    <color>F7941D</color>
                    <item>
                        <host>Axians SQL Performance</host>
                        <key>waitstats.running.PAGEIOLATCH_SH</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>5</sortorder>
                    <color>FC6EA3</color>
                    <item>
                        <host>Axians SQL Performance</host>
                        <key>waitstats.running.PAGEIOLATCH_UP</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>6</sortorder>
                    <color>6C59DC</color>
                    <item>
                        <host>Axians SQL Performance</host>
                        <key>waitstats.running.PAGELATCH_EX</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>7</sortorder>
                    <color>C7A72D</color>
                    <item>
                        <host>Axians SQL Performance</host>
                        <key>waitstats.running.PAGELATCH_SH</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>8</sortorder>
                    <color>BA2A5D</color>
                    <item>
                        <host>Axians SQL Performance</host>
                        <key>waitstats.running.PAGELATCH_UP</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>Lock waits</name>
            <graph_items>
                <graph_item>
                    <sortorder>1</sortorder>
                    <color>199C0D</color>
                    <item>
                        <host>Axians SQL Performance</host>
                        <key>waitstats.running.LCK_M_I</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>2</sortorder>
                    <color>F63100</color>
                    <item>
                        <host>Axians SQL Performance</host>
                        <key>waitstats.running.LCK_M_S</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>3</sortorder>
                    <color>2774A4</color>
                    <item>
                        <host>Axians SQL Performance</host>
                        <key>waitstats.running.LCK_M_SCH_M</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>4</sortorder>
                    <color>F7941D</color>
                    <item>
                        <host>Axians SQL Performance</host>
                        <key>waitstats.running.LCK_M_SCH_S</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>5</sortorder>
                    <color>FC6EA3</color>
                    <item>
                        <host>Axians SQL Performance</host>
                        <key>waitstats.running.LCK_M_U</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>6</sortorder>
                    <color>6C59DC</color>
                    <item>
                        <host>Axians SQL Performance</host>
                        <key>waitstats.running.LCK_M_X</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>7</sortorder>
                    <color>C7A72D</color>
                    <item>
                        <host>Axians SQL Performance</host>
                        <key>waitstats.running.LCK_M_IX</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>memory usage</name>
            <show_triggers>NO</show_triggers>
            <graph_items>
                <graph_item>
                    <sortorder>1</sortorder>
                    <color>199C0D</color>
                    <item>
                        <host>Axians SQL Performance</host>
                        <key>db.odbc.select[get_avg_instance_memory,&quot;{$MSSQL.DSN}&quot;]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>2</sortorder>
                    <color>F63100</color>
                    <item>
                        <host>Axians SQL Performance</host>
                        <key>db.odbc.select[get_avg_memory,&quot;{$MSSQL.DSN}&quot;]</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>Poison Waits</name>
            <show_triggers>NO</show_triggers>
            <graph_items>
                <graph_item>
                    <sortorder>1</sortorder>
                    <color>FF7043</color>
                    <item>
                        <host>Axians SQL Performance</host>
                        <key>waitstats.running.RESOURCE_SEMAPHORE</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>2</sortorder>
                    <color>F63100</color>
                    <item>
                        <host>Axians SQL Performance</host>
                        <key>waitstats.running.THREADPOOL</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
    </graphs>
</zabbix_export>
